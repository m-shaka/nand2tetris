// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
    field Array items;
    field int nextPos;

    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
        if (maxLength > 0) {
            let items = Array.new(maxLength);
            let nextPos = 0;
        }
        return this;
    }

    /** Disposes this string. */
    method void dispose() {
        if (nextPos > 0) {
            do Array.dispose(items);
        }
        return;
    }

    /** Returns the current length of this string. */
    method int length() {
        return nextPos;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
        return items[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
        let items[j] = c;
        return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
        let items[nextPos] = c;
        let nextPos = nextPos + 1;
        return this;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
        let nextPos = nextPos - 1;
        let items[nextPos] = null;
        return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
        return 0;
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
        var int absVal, divider, tmp, crntPos;
        let crntPos = 0;
        if (val < 0) {
            do setCharAt(crntPos, 45);
            let crntPos = crntPos + 1;
        }
        let absVal = Math.abs(val);
        let divider = 10000;
        while (divider > 0) {
            let tmp = Math.divide(absVal, divider);
            if ((tmp > 0) | ~(divider = 10000)) {
                do setCharAt(crntPos, 48 + tmp);
                let crntPos = crntPos + 1;
            }
            let absVal = absVal - (tmp * divider);
            let divider = Math.divide(divider, 10);
        }
        let nextPos = crntPos;
        return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return 0;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 0;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 0;
    }
}
